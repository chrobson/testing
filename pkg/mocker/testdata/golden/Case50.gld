Mock for the Case50 interface in mocker/testdata/cases package.
---
package golden

// Code generated by mocker. DO NOT EDIT.

import (
	"github.com/ctx42/testing/pkg/mock"
	"github.com/ctx42/testing/pkg/tester"
)

type Case50 struct {
	*mock.Mock
	t tester.T
}

func NewCase50(t tester.T) *Case50 {
	t.Helper()
	return &Case50{Mock: mock.NewMock(t), t: t}
}

func (_mck *Case50) Method50(a int) (int, int, error) {
	_mck.t.Helper()
	_args := []any{a}
	_rets := _mck.Called(_args...)
	if len(_rets) != 3 {
		_mck.t.Fatal("the number of mocked method returns does not match")
	}

	var _r0 int
	if _rFn, ok := _rets.Get(0).(func(int) int); ok {
		_r0 = _rFn(a)
	} else if _r := _rets.Get(0); _r != nil {
		_r0 = _r.(int)
	}
	var _r1 int
	if _rFn, ok := _rets.Get(1).(func(int) int); ok {
		_r1 = _rFn(a)
	} else if _r := _rets.Get(1); _r != nil {
		_r1 = _r.(int)
	}
	var _r2 error
	if _rFn, ok := _rets.Get(2).(func(int) error); ok {
		_r2 = _rFn(a)
	} else if _r := _rets.Get(2); _r != nil {
		_r2 = _r.(error)
	}
	return _r0, _r1, _r2
}
